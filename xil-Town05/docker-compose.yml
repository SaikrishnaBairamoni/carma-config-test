
services:
  carma-simulation:
    privileged: true
    image: ${DOCKER_ORG}/cdasim:${DOCKER_TAG}
    networks:
      carma_sim_net:
        ipv4_address: 172.2.0.2
    container_name: carma-simulation
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - /opt/carma-simulation/logs:/opt/carma-simulation/logs
      - ./carla-recorder/:/app/scenario_runner/metrics/data/
      - ./cdasim/logback.xml:/opt/carma-simulation/etc/logback.xml
      - ./sumo_background_traffic/Town05.rou.xml:/opt/carma-simulation/scenarios/Town05/sumo/Town05.rou.xml
      - ./sumo_background_traffic/Town05.sumocfg:/opt/carma-simulation/scenarios/Town05/sumo/Town05.sumocfg
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]
    command: bash -c "./mosaic.sh -s Town05"

  ## carma_1 vehicle
  roscore_1:
    image: ${DOCKER_ORG}/carma-base:${DOCKER_TAG}-noetic
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.2
    container_name: roscore_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/logs/carma_1:/opt/carma/logs
    restart: always
    environment:
      - ROS_IP=172.3.0.2
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    command: roscore

  platform_1:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.3
    container_name: platform_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs/carma_1:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/yolo:/opt/carma/yolo
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/data:/opt/carma/data
      - /opt/carma/simulation:/opt/carma/simulation
    environment:
      - ROS_IP=172.3.0.3
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    command: >
      bash -c 'export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      && wait-for-it 172.3.0.2:11311 -- roslaunch /opt/carma/vehicle/config/carma_docker.launch'

  platform_1:
    image: ${DOCKER_ORG}/carma-platform:${DOCKER_TAG}
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.4
    container_name: platform_1
    volumes_from:
      - container:carma-config:ro
    volumes:
      - /opt/carma/logs/carma_1:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
      - ./carma-platform/inlanecruising_plugin/parameters.yaml:/opt/carma/install/inlanecruising_plugin/share/inlanecruising_plugin/config/parameters.yaml
      - ./carma-platform/yield_plugin/parameters.yaml:/opt/carma/install/yield_plugin/share/yield_plugin/config/parameters.yaml
      - ./carma-platform/lci_strategic_plugin/parameters.yaml:/opt/carma/install/lci_strategic_plugin/share/lci_strategic_plugin/config/parameters.yaml
      - ./carma-platform/motion_computation/parameters.yaml:/opt/carma/install/motion_computation/share/motion_computation/config/parameters.yaml
    command: >
      bash -c 'export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      && source /opt/carma/install/setup.bash
      && ros2 launch /opt/carma/vehicle/config/carma_docker.launch.py'

  ros1_bridge_1:
    image: ${DOCKER_ORG}/carma-msgs:${DOCKER_TAG}
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.5
    container_name: ros1_bridge_1
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=172.3.0.5
      - ROS_MASTER_URI=http://172.3.0.2:11311/
    volumes:
      - /opt/carma/logs/carma_1:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
    command: >
      bash -c 'export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      && wait-for-it 172.3.0.2:11311 -- rosparam load /opt/carma/vehicle/config/bridge.yml
      && source /home/carma/.base-image/workspace/install/setup.bash
      && ros2 run ros1_bridge dynamic_bridge --multi-threads'

  carma-carla-integration_1:
    image: ${DOCKER_ORG}/carma-carla-integration:${DOCKER_TAG}
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.6
      carma_sim_net:
        ipv4_address: 172.2.0.6
    container_name: carma-carla-integration_1
    volumes:
      - ./carma-carla-integration/carma_carla_agent.launch:/home/carma/carma-carla-integration/carma-carla-agent/launch/carma_carla_agent.launch
    volumes_from:
      - container:carma-config:ro
    environment:
      ROS_IP: 172.3.0.6
      ROS_MASTER_URI: http://172.3.0.2:11311/
      PYTHONUNBUFFERED: 1

    # sleep is for carla simulator to become available
    # start_delay_in_seconds is carla game time seconds to adjust when to engage for the scenario
    # and account for delay required for world model to fully update after route is selected
    command: >
      bash -c "export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      && wait-for-it 172.3.0.2:11311
      && export PYTHONPATH=$PYTHONPATH:~/PythonAPI/carla/dist/carla-0.9.10-py3.7-linux-x86_64.egg:/home/carma/carla-sensor-lib/src
      && source ~/carma_carla_ws/devel/setup.bash
      && python3 /home/carma/carma-carla-integration/carla-health-poll/src/wait_for_carla.py
      && roslaunch carma_carla_agent carma_carla_agent.launch
      role_name:='carma_1'
      host:='172.2.0.2'
      selected_route:='timtsp_route'
      start_delay_in_seconds:='30'
      spawn_point:='-255.7,7,0,0,0,0'"

  ns3_adapter_1:
    image: ${DOCKER_ORG}/carma-ns3-adapter:${DOCKER_TAG}
    networks:
      carma_net_1:
        ipv4_address: 172.3.0.7
      carma_sim_net:
        ipv4_address: 172.2.0.7
    container_name: ns3_adapter_1
    volumes_from:
      - container:carma-config:ro
    environment:
      - ROS_IP=172.3.0.7
      - ROS_MASTER_URI=http://172.3.0.2:11311/
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - /opt/carma/logs/carma_1:/opt/carma/logs
      - /opt/carma/.ros:/home/carma/.ros
      - /opt/carma/vehicle/calibration:/opt/carma/vehicle/calibration
      - /opt/carma/maps:/opt/carma/maps
      - /opt/carma/routes:/opt/carma/routes
      - /opt/carma/yolo:/opt/carma/yolo
      - ./ns3_adapter/adapter_1/parameters.yaml:/opt/carma/install/ns3_adapter/share/ns3_adapter/config/parameters.yaml
    command: >
      bash -c "export RMW_IMPLEMENTATION=rmw_fastrtps_cpp
      && wait-for-it 172.3.0.2:11311 -- roslaunch ns3_adapter ns3_adapter.launch enable_ros1_record:=true
      role_id:='carma_1'
      remap_ns:=/hardware_interface/comms"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
      carma_streets_net_1:
        ipv4_address: 172.4.0.3
    volumes:
      - zookeeper-datavolume:/opt/zookeeper-3.4.13/data

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    depends_on:
      - zookeeper
    network_mode: service:zookeeper
    # Health check to confirm kafka server is healthy (script is a client) and all topics
    # have been created (time_sync is last topic).
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--describe", "--bootstrap-server", "172.4.0.3:9092", "--topic", "time_sync"]
      interval: 2s
      timeout: 10s
      retries: 10
    environment:
      DOCKER_HOST_IP: 172.4.0.3
      KAFKA_ADVERTISED_HOST_NAME: 172.4.0.3
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "\
        v2xhub_scheduling_plan_sub:1:1,\
        v2xhub_bsm_in:1:1,\
        v2xhub_mobility_operation_in:1:1,\
        v2xhub_mobility_path_in:1:1,\
        vehicle_status_intent_output:1:1,\
        v2xhub_map_msg_in:1:1,\
        modified_spat:1:1,\
        desired_phase_plan:1:1,\
        tsc_config_state:1:1,\
        v2xhub_sim_sensor_detected_object:1:1,\
        v2xhub_sdsm_sub,\
        time_sync:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka-datavolume:/kafka/kafka-logs

  ##############################################################
  # Kafka Owl for monitoring kafka traffic. UI can be accessed on
  # configurable port set in performance/kowl.yaml NOTE: IS NOT
  # NECESSARY FOR DEPLOYMENT BUT HELFUL FOR DEBUGGING!
  ################################################################
  kowl:
    image: quay.io/cloudhut/kowl
    container_name: kowl
    restart: on-failure
    network_mode: service:zookeeper
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      CONFIG_FILEPATH: /etc/kowl/kowl.yaml
    volumes:
      - ./kowl:/etc/kowl/

  db:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      - MYSQL_DATABASE=IVP
      - MYSQL_USER=IVP
      - MYSQL_PASSWORD_FILE=/secrets/mysql_password.txt
      - MYSQL_ROOT_PASSWORD_FILE=/secrets/mysql_root_password.txt
    networks:
      carma_streets_net_1:
        ipv4_address: 172.4.0.2
      carma_sim_net:
        ipv4_address: 172.2.0.8
    volumes:
      - mysql-datavolume:/var/lib/mysql
      - ./secrets:/secrets
      - ./mysql:/docker-entrypoint-initdb.d

  php:
    image: usdotfhwaops/php:${OPS_DOCKER_TAG}
    container_name: php
    network_mode: service:db
    depends_on:
      - v2xhub
    stdin_open: true
    tty: true

  v2xhub:
    image: usdotfhwaops/v2xhubamd:${OPS_DOCKER_TAG}
    container_name: v2xhub
    network_mode: service:db
    restart: always
    depends_on:
      - db
    environment:
      MYSQL_PASSWORD: /home/V2X-Hub/secrets/mysql_password.txt
      SIMULATION_MODE: ${SIMULATION_MODE}
      SIMULATION_IP: 172.2.0.2
      SIMULATION_REGISTRATION_PORT: 1615
      LOCAL_IP: 172.2.0.8
      TIME_SYNC_TOPIC: time_sync
      TIME_SYNC_PORT: 7575
      SIM_V2X_PORT: 1517
      SIM_INTERACTION_PORT: 7576
      V2X_PORT: 8686
      SENSOR_JSON_FILE_PATH: /home/V2X-Hub/sensor_configurations/sensors.json
      INFRASTRUCTURE_ID: ${INFRASTRUCTURE_ID}
    volumes:
      - ./logs:/var/log/tmx
      - ./MAP:/var/www/plugins/MAP
      - ./secrets:/home/V2X-Hub/secrets


  carla-sensor-lib:
    image: ${DOCKER_ORG}/carla-sensor-lib:${DOCKER_TAG}
    networks:
      carma_sim_net:
        ipv4_address: 172.2.0.5
    container_name: carla-sensor-lib
    restart: always
    environment:
      - LOAD_CARLA_EGG=True
      - CARLA_VERSION=0.9.10
      - CARLA_EGG_DIR=/home/CarlaCDASimAdapter/
    volumes:
      - ./carla-sensor-lib/logs/:/home/CarlaCDASimAdapter/logs/
    command: bash -c "sleep 15;
      python3 -u /home/CarlaCDASimAdapter/src/CarlaCDASimAdapter.py --carla-host 172.2.0.2 --xmlrpc-server-host 172.2.0.5  --sensor-config-file ./config/simulated_sensor_config.yaml --noise-model-config-file ./config/noise_model_config.yaml"

  econolite-virtual-controller:
    image: usdotfhwastol/econolite-virtual-controller:latest
    container_name: evc
    restart: always
    networks:
      carma_sim_net:
        ipv4_address: 172.2.0.4
      carma_streets_net_1:
        ipv4_address: 172.4.0.4
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./evc_sumo/:/home/carma/src/resources/
      - ./PyEOS/:/home/carma/PyEOS
      - pyeos_data:/home/carma/shared_data
    depends_on:
      - carma-simulation
    command: >
      bash -c "cd docker && ./start_evc.sh --traci-ip 172.2.0.2"

networks:
  carma_sim_net:
    ipam:
      config:
        - subnet: 172.2.0.0/16

  carma_net_1:
    ipam:
      config:
        - subnet: 172.3.0.0/16

  carma_streets_net_1:
    ipam:
      config:
        - subnet: 172.4.0.0/16

volumes:
  mysql-datavolume:
  kafka-datavolume:
  zookeeper-datavolume:
  pyeos_data:
