<?xml version="1.0"?>
<!--
  Copyright (C) 2018-2021 LEIDOS.

  Licensed under the Apache License, Version 2.0 (the "License"); you may not
  use this file except in compliance with the License. You may obtain a copy of
  the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  License for the specific language governing permissions and limitations under
  the License.
-->
<!--
        drivers.launch

This file is used for vehicle configurations. The arguments from carma.launch should pass on to carma_src.launch, which should then pass those arguments to this file. The arguments in the carma.laun>

If not using simulated drivers they are activated if the respective mock arguments being passed in are false. These lines below activate the respective actual driver if the respective mock argument >

-->

<launch>
  <!--<arg name="mock_drivers" default="controller can comms gnss radar lidar camera roadway_sensor" />
  <arg name="vehicle_calibration_dir" default="$(arg vehicle_calibration_dir)"/> -->
  <!-- File not used in development environment where only mock drivers are used -->

  <!-- Shutdown node to shutsdown driver node with fatal message -->
  <node pkg="driver_shutdown" type="driver_shutdown" name="$(anon driver_shutdown)" required="true"/>

  <!-- Mock Drivers -->
  <arg name="mock_drivers"        default="" doc="List of driver node base names which will be launched as mock drivers"/>

  <arg name="mock_comms"          value="$(eval 'comms' in arg('mock_drivers').split())"/>

  <!-- Specific Drivers -->
  <arg name="drivers" default="dsrc_driver"
    doc="Desired real drivers to launch specified by package name. Mock drivers will take precedence"/>

  <arg name="dsrc_driver"                   value="$(eval ('dsrc_driver' in arg('drivers').split()) and not arg('mock_comms'))"/>

  <!-- DSRC OBU Driver Node -->
  <include if="$(arg dsrc_driver)" file="$(find dsrc_driver)/launch/dsrc_node.launch"/>

</launch>